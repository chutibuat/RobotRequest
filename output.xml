<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200123 18:29:37.070" generator="Robot 3.1.2 (Python 2.7.16 on darwin)">
<suite source="/Users/nuttayachutibuat/Public/RobotRequest/test2.robot" id="s1" name="Test2">
<test id="s1-t1" name="Get Requests status 200 and success">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>ApiJsonplaceholder</arg>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200123 18:29:37.262" level="INFO">Creating Session using : alias=ApiJsonplaceholder, url=https://jsonplaceholder.typicode.com, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200123 18:29:37.263" starttime="20200123 18:29:37.262"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>ApiJsonplaceholder</arg>
<arg>/comments?postId=1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200123 18:29:37.420" level="INFO">Get Request using : alias=ApiJsonplaceholder, uri=/comments?postId=1, headers=None json=None</msg>
<msg timestamp="20200123 18:29:37.420" level="INFO">/usr/local/lib/python2.7/site-packages/urllib3/connectionpool.py:1004: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20200123 18:29:37.421" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200123 18:29:37.421" starttime="20200123 18:29:37.263"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200123 18:29:37.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200123 18:29:37.422" starttime="20200123 18:29:37.421"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${resultJson}</var>
</assign>
<msg timestamp="20200123 18:29:37.422" level="INFO">To JSON using : content=[
  {
    "postId": 1,
    "id": 1,
    "name": "id labore ex et quam laborum",
    "email": "Eliseo@gardner.biz",
    "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
  },
  {
    "postId": 1,
    "id": 2,
    "name": "quo vero reiciendis velit similique earum",
    "email": "Jayne_Kuhic@sydney.com",
    "body": "est natus enim nihil est dolore omnis voluptatem numquam\net omnis occaecati quod ullam at\nvoluptatem error expedita pariatur\nnihil sint nostrum voluptatem reiciendis et"
  },
  {
    "postId": 1,
    "id": 3,
    "name": "odio adipisci rerum aut animi",
    "email": "Nikita@garfield.biz",
    "body": "quia molestiae reprehenderit quasi aspernatur\naut expedita occaecati aliquam eveniet laudantium\nomnis quibusdam delectus saepe quia accusamus maiores nam est\ncum et ducimus et vero voluptates excepturi deleniti ratione"
  },
  {
    "postId": 1,
    "id": 4,
    "name": "alias odio sit",
    "email": "Lew@alysha.tv",
    "body": "non et atque\noccaecati deserunt quas accusantium unde odit nobis qui voluptatem\nquia voluptas consequuntur itaque dolor\net qui rerum deleniti ut occaecati"
  },
  {
    "postId": 1,
    "id": 5,
    "name": "vero eaque aliquid doloribus et culpa",
    "email": "Hayden@althea.biz",
    "body": "harum non quasi et ratione\ntempore iure ex voluptates in ratione\nharum architecto fugit inventore cupiditate\nvoluptates magni quo et"
  }
] </msg>
<msg timestamp="20200123 18:29:37.423" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200123 18:29:37.423" level="INFO">${resultJson} = [{u'body': u'laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium', u'email': u'Eliseo@gardner.biz', ...</msg>
<status status="PASS" endtime="20200123 18:29:37.423" starttime="20200123 18:29:37.422"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resultJson}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200123 18:29:37.423" level="INFO">Length is 5</msg>
<msg timestamp="20200123 18:29:37.423" level="INFO">${length} = 5</msg>
<status status="PASS" endtime="20200123 18:29:37.424" starttime="20200123 18:29:37.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${length}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20200123 18:29:37.424" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200123 18:29:37.424" starttime="20200123 18:29:37.424"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${resultJson[0]}</arg>
</arguments>
<assign>
<var>&amp;{result}</var>
</assign>
<msg timestamp="20200123 18:29:37.425" level="INFO">&amp;{result} = { body=laudantium enim quasi est quidem magnam voluptate ipsam eos
tempora quo necessitatibus
dolor quam autem quasi
reiciendis et nam sapiente accusantium | postId=1 | email=Eliseo@gardner.biz | name...</msg>
<status status="PASS" endtime="20200123 18:29:37.425" starttime="20200123 18:29:37.424"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.name}</arg>
<arg>id labore ex et quam laborum</arg>
</arguments>
<status status="PASS" endtime="20200123 18:29:37.426" starttime="20200123 18:29:37.426"></status>
</kw>
<status status="PASS" endtime="20200123 18:29:37.426" critical="yes" starttime="20200123 18:29:37.262"></status>
</test>
<test id="s1-t2" name="Get Requests length">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>ApiJsonplaceholder</arg>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200123 18:29:37.427" level="INFO">Creating Session using : alias=ApiJsonplaceholder, url=https://jsonplaceholder.typicode.com, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200123 18:29:37.428" starttime="20200123 18:29:37.427"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>ApiJsonplaceholder</arg>
<arg>/comment?postId=1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200123 18:29:37.565" level="INFO">Get Request using : alias=ApiJsonplaceholder, uri=/comment?postId=1, headers=None json=None</msg>
<msg timestamp="20200123 18:29:37.565" level="INFO">/usr/local/lib/python2.7/site-packages/urllib3/connectionpool.py:1004: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20200123 18:29:37.566" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20200123 18:29:37.566" starttime="20200123 18:29:37.428"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200123 18:29:37.567" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200123 18:29:37.567" starttime="20200123 18:29:37.566"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${resultJson}</var>
</assign>
<msg timestamp="20200123 18:29:37.568" level="INFO">To JSON using : content={} </msg>
<msg timestamp="20200123 18:29:37.568" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200123 18:29:37.568" level="INFO">${resultJson} = {}</msg>
<status status="PASS" endtime="20200123 18:29:37.568" starttime="20200123 18:29:37.567"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resultJson}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200123 18:29:37.568" level="INFO">Length is 0</msg>
<msg timestamp="20200123 18:29:37.569" level="INFO">${length} = 0</msg>
<status status="PASS" endtime="20200123 18:29:37.569" starttime="20200123 18:29:37.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200123 18:29:37.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200123 18:29:37.569" starttime="20200123 18:29:37.569"></status>
</kw>
<status status="PASS" endtime="20200123 18:29:37.569" critical="yes" starttime="20200123 18:29:37.426"></status>
</test>
<status status="PASS" endtime="20200123 18:29:37.570" starttime="20200123 18:29:37.072"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Test2" pass="2">Test2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
